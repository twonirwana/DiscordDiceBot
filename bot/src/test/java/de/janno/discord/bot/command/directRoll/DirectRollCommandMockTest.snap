de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.channelAlias[event1]=[
  [
    "reply: `commandString`\nSaved new alias"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.channelAlias[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=2d20+10 ⇒ 36, descriptionOrContent=, fields=[], componentRowDefinitions=[], hasImage=true, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.help=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=null, descriptionOrContent=Type `/r` and a dice expression. It is possible to give the roll a label by adding it with a `@`. The output type, dice images etc. can be configuration with `/channel_config save_direct_roll_config`\n```\n| Name                 | Notation   | Example            |\r\n|----------------------|------------|--------------------|\r\n| Regular Dice         | d          | d6, 3d6            |\r\n| Custom Dice          | d[x,y,...] | 3d[Head,Tail]      |\r\n| Exploding Dice       | d!         | 4d!6               |\r\n| Exploding Add Dice   | d!!        | 4d!!6              |\r\n| Keep Highest         | k          | 3d6k2              |\r\n| Keep Lowest          | l          | 3d6l2              |\r\n| Sum                  | =          | 3d6=               |\r\n| Add to List          | +          | 3d6+2d12           |\r\n| Concatenate          | _          | 3d6 _ 'dmg'        |\r\n| Negative add to List | -          | 3d6-2d12 or -2d6   |\r\n| Decimal Divide       | //         | 2/6                |\r\n| Divide               | /          | 12/6               |\r\n| Multiply             | *          | 12*d6              |\r\n| Modulo               | mod        | d6 mod 2           |\r\n| Equal Filter         | ==         | 3d6==3             |\r\n| Greater Then Filter  | >          | 3d6>3              |\r\n| Lesser Then Filter   | <          | 3d6<3              |\r\n| Greater Equal Filter | >=         | 3d6>=3             |\r\n| Lesser Equal Filter  | <=         | 3d6<=3             |\r\n| Lesser Equal Filter  | <=         | 3d6<=3             |\r\n| Count                | c          | 3d6<3c             |\r\n| Multiple Rolls       | ,          | 1d6,2d10           |\r\n| Repeat               | x          | 3x2d6              |\r\n| Repeat List          | r          | 3r2d6              |\r\n| Reroll               | rr         | 3d10 rr 1          |\r\n| Equal                | =?         | d6=?6              |\r\n| Greater              | >?         | d6>?5              |\r\n| Greater Equal        | >=?        | d6>=?5             |\r\n| Lower                | <?         | d6<?4              |\r\n| Lower Equal          | <=?        | d6<=?4             |\r\n| In                   | in         | d6 in [1/3/5]      |\r\n| And                  | &&         | d6>?1 && d6<5      |\r\n| Or                   | ||         | d6>?1 || d6<5      |\r\n| Negate               | !          | !d6>?1             |\r\n| Color                | col        | d6 col 'red'       |\r\n| Tag                  | tag        | d6 tag 'marked'    |\r\n| Brackets             | ()         | (2d4=)d6           |\r\n| Text                 | ''         | 'Damage ' + d6     |\r\n| Sort asc             | asc()      | asc(10d10)         |\r\n| Sort desc            | desc()     | desc(10d10)        |\r\n| Min                  | min()      | min(3d4, 8)        |\r\n| Max                  | max()      | max(3d4, 8)        |\r\n| Chancel              | chancel()  | chancel(8d10,10,1) |\r\n| Replace              | replace()  | replace(6d10,1,2)  |\r\n| Color On             | colorOn()  | colorOn(d6,6,'red')|\r\n| Explode              | exp()      | exp(d6,1,2)        |\r\n| If                   | if()       | if(d6=?6,'Y','N')  |\r\n| Group Count          | groupC()   | groupC(20d6)       |\r\n| Concatenate          | concat()   | concat('Att:',d20) |\r\n| Value                | val()      | val('$1',10d10)    |\r\n\n```, fields=[EmbedOrMessageDefinition.Field(name=Example, value=`/r expression: 1d6@Damage`, inline=false), EmbedOrMessageDefinition.Field(name=Full documentation, value=https://github.com/twonirwana/DiscordDiceBot, inline=false), EmbedOrMessageDefinition.Field(name=Discord Server for News, Help and Feature Requests, value=https://discord.gg/e43BsqKpFr, inline=false)], componentRowDefinitions=[], hasImage=false, type=EMBED, userReference=false, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.invalidExpression=[
  [
    "reply: commandString\nThe following expression is invalid: __d__. The error is: Operator d has right associativity but the right value was: empty. Use `/r expression:help` to get more information on how to use the command."
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_compact[event1]=[
  [
    "reply: `commandString`\nSaved direct roll channel config"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_compact[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=null, descriptionOrContent=__**1d6 ⇒ 1**__  [1], fields=[], componentRowDefinitions=[], hasImage=false, type=MESSAGE, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_full_imageNone[event1]=[
  [
    "reply: `commandString`\nSaved direct roll channel config"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_full_imageNone[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=Roll ⇒ 1, descriptionOrContent=[1], fields=[], componentRowDefinitions=[], hasImage=false, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_minimal[event1]=[
  [
    "reply: `commandString`\nSaved direct roll channel config"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_minimal[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=null, descriptionOrContent=1d6 ⇒ 1, fields=[], componentRowDefinitions=[], hasImage=false, type=MESSAGE, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_withoutExpression[event1]=[
  [
    "reply: `commandString`\nSaved direct roll channel config"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_withoutExpression[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=Roll ⇒ 1, descriptionOrContent=, fields=[], componentRowDefinitions=[], hasImage=true, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_withoutExpression_withLabel[event1]=[
  [
    "reply: `commandString`\nSaved direct roll channel config"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_config_withoutExpression_withLabel[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=test ⇒ 1, descriptionOrContent=, fields=[], componentRowDefinitions=[], hasImage=true, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_default=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=1d6 ⇒ 1, descriptionOrContent=, fields=[], componentRowDefinitions=[], hasImage=true, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_default_withLabel=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=test ⇒ 1, descriptionOrContent=1d6, fields=[], componentRowDefinitions=[], hasImage=true, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_multiLine=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=\nAttack\nDown\n ⇒ a\nb\nc, descriptionOrContent=d[a\nb\nc,\nd,e\n]: [a\nb\nc], fields=[], componentRowDefinitions=[], hasImage=false, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.roll_warn=[
  [
    "reply: commandString did not contain any random element, try for Example `d20` to roll a 20 sided die"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.userChannelAlias[event1]=[
  [
    "reply: `commandString`\nSaved new alias"
  ]
]


de.janno.discord.bot.command.directRoll.DirectRollCommandMockTest.userChannelAlias[event2]=[
  [
    "replyWithEmbedOrMessageDefinition: EmbedOrMessageDefinition(title=2d20+10 ⇒ 36, descriptionOrContent=, fields=[], componentRowDefinitions=[], hasImage=true, type=EMBED, userReference=true, sendToOtherChannelId=null)"
  ]
]